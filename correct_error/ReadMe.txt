1. Brief introduction

This program corrects the sequencing errors by using the kmer frequency information. It assume that most low-frequency Kmers were generated by sequencing errors, so the key of error correction is that the distinguish rate of the low-frequency and high-frequency Kmers, the larger Kmer size, the better of this effect. In order to get an extreme high accuracy result, we balanced the trimmed length and delete ratio with the accuracy level. The practical Kmer size is from 15 to 19, which should be chosen based on the genome size. 

Alerts: (1) This program treats base N as A (sequencing error) automatically, and will correct most of the N bases with normal bases. (2) By a combination of correction and trimming, the result of this program will be the sequences which do not contain low-frequency Kmers (default: frequency < 10), i.e, there will be no low-frequency Kmers in the result sequences, all the low-frequency-Kmer sequencess have been either corrected or trimmed/deleted, this will filter some real reads from low-coverage genomic regions, and decrease contig length in assembly. (3)This program works well on the repeat-less genome (fruitfly), but it works badly on the repeat-rich genome (maize). The trimming and deleting function will remove some sequences, if the genome is repeat-rich, then the repeat sequences may be removed more than unique sequences, due to the difficulty for correction when alternative minimum_change_path may be appeared.


2. History and contributions
The error correction program was originally developed by Shi zhongbin (2008). Later the codes was revised by Fan Wei (2010), to increase the speed and accuracy, and correct_error v1.0 was published then. In this revision effort, Chen Yanxiang and Mu desheng give much help on the branch and bonding tree codes, and Li Zhenyu developed the parallel codes with pthread library in the program. After that, Yuan Jianying contributes a lot to revise the program, not only fix some bugs, but also made improvements on accuracy, the version 1.1 was published by Jianying. In the beginning of 2011, Fan wei, Jianying and Zhenyu cooperates, to fix some other bugs, and do more testings, and at last this version 1.5 was published. People inclue the assembly-group memebers and other workmates, who have contributed to the designing, developing, and testing of this work, were also acknowIedged. I am sure that, this version is still far from mature, and there are still many spaces to improve in the future.


2. Changes in Version 1.5 (relative to version 1.0)

(1). Fix a bug in the calculation of last_change_pos vaule.

(2). To make sure the correct start site of Branch Bonding Tree, require a higher threshold for HighFreqRegLenCutoff (>=KmerSize), and cut the both edges of HighFreqReg to 1/3*HighFreqRegLenCutoff.

(3). Add a restriction in the max_allowed_change (<=2) value when using the BBT-correction, to ensure the running speed and high accuracy, this is key for (change >=3) especially for longer reads (>=150bp).

(4). Do error correction when there is only one miminum path in the BBT.

(5) Increase the speed of compress and decompress of kmer-frequence-table with zlib by parallel mode.

(6) Add the kmer_freq_pread function, because the lane number of one project becomes fewer now, and the parallel reads mode will be more useful. 

(7) Change the parallel reads mode in correct_error_pread, replace the one-buffer with two-buffer mode, to increase speed (not done).

